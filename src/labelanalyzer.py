#!/usr/bin/env python3
"""Analyze labels generated by mannual classification of the crops
"""

import argparse
import logging
import time
from os.path import join as pjoin
from logging import debug, info
import os
import pandas as pd
import inspect

#############################################################
def info(*args):
    pref = datetime.now().strftime('[%y%m%d %H:%M:%S]')
    print(pref, *args, file=sys.stdout)

#############################################################
def summarize_from_dir(annotdir, outdir):
    """Summarize @annotdir csv annotations in .txt format and output
    summary to @outdir
    """
    info(inspect.stack()[0][3] + '()')
    if not os.path.exists(outdir): os.mkdir(outdir)

    files = sorted(os.listdir(annotdir))

    labels = '1 2 3'.split(' ')
    nlabels = len(labels)
    info('Using labels:{}'.format(labels))
    elements = { l:[] for l in labels }

    nfiles = len(files)

    cols = 'img,x,y,label'.split(',')
    data = []
    for f in files:
        if not f.endswith('.txt'): continue
        filepath = pjoin(annotdir, f)
        _, y, x, heading = os.path.split(filepath)[-1].replace('.txt', '').split('_')
        labels_ = open(filepath).read().strip().split(',')

        for l in labels_: # each label in the file correspond to a new row
            img = f.replace('.txt', '.jpg')
            data.append([img, x, y, l])

    df = pd.DataFrame(data, columns=cols)
    df.to_csv(pjoin(outdir, 'labels.csv'), index_label='id',)

    for l in labels: # open
        listpath = os.path.join(outdir, 'label_{}.lst'.format(l))
        df[df.label == l].to_csv(listpath, columns=['img'], index=False)

    cmd = '# export PREV=${{PWD}} && for I in {}; '\
        'do mkdir {}/label_${{I}} -p && '\
        'cd {} && '\
        'xargs --arg-file {}/label_${{I}}.lst '\
        'cp --target-directory="{}/label_${{I}}/"; done && '\
        'cd ${{PREV}}'. \
        format(' '.join(labels), outdir, '<IMDIR>', outdir, outdir)
    info('# If you want to copy the images, replace <IMDIR> and run:')
    info(cmd)
